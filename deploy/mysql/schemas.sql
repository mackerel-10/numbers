USE test;

CREATE TABLE IF NOT EXISTS test.user (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(32) NOT NULL UNIQUE,
  password VARCHAR(72) NOT NULL,
  first_name VARCHAR(16) NOT NULL,
  last_name VARCHAR(16) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS test.genre (
  name VARCHAR(32) PRIMARY KEY NOT NULL
);

CREATE TABLE IF NOT EXISTS test.video (
  id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- UUID
  title VARCHAR(30) NOT NULL,
  summary TEXT,
  genre VARCHAR(32),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (genre) REFERENCES test.genre(name)
);

CREATE TABLE IF NOT EXISTS test.review (
  video_id INT NOT NULL,
  user_id INT NOT NULL,
  rate FLOAT NOT NULL,
  content TEXT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (video_id, user_id),
  FOREIGN KEY (video_id) REFERENCES test.video(id),
  FOREIGN KEY (user_id) REFERENCES test.user(id)
);

CREATE TABLE IF NOT EXISTS test.preference (
  user_id INT NOT NULL,
  video_id INT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (video_id, user_id),
  FOREIGN KEY(user_id) REFERENCES test.user(id),
  FOREIGN KEY(video_id) REFERENCES test.video(id)
);
